import { Telegraf } from 'telegraf';
import { BotContext } from '../middleware/session.middleware.js';
import { logger } from '../../utils/logger.js';

export const registerCommandHandlers = (bot: Telegraf<BotContext>) => {
  bot.command('start', async (ctx) => {
    logger.info(`User ${ctx.from.id} started the bot`);
    ctx.session.currentScene = 'welcome';
    await ctx.reply('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ –∫–æ–º–ø–∞–Ω–∏–∏ "–°–µ–∫—Ç–æ—Ä"! –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?', {
      reply_markup: {
        keyboard: [
          [{ text: 'üîç –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É' }],
          [{ text: '‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã' }],
          [{ text: 'üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º' }]
        ],
        resize_keyboard: true
      }
    });
  });

  bot.command('help', async (ctx) => {
    logger.info(`User ${ctx.from.id} requested help`);
    await ctx.reply(`
–Ø –±–æ—Ç-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏ "–°–µ–∫—Ç–æ—Ä". –í–æ—Ç —á—Ç–æ —è –º–æ–≥—É:

/start - –ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ
/faq - –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
/inquiry - –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É

–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
    `);
  });

  bot.command('faq', async (ctx) => {
    logger.info(`User ${ctx.from.id} accessed FAQ`);
    ctx.session.currentScene = 'faq';
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å:', {
      reply_markup: {
        keyboard: [
          [{ text: 'üíª –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞' }, { text: 'üì± –ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞' }],
          [{ text: 'ü§ñ AI-—Ä–µ—à–µ–Ω–∏—è' }, { text: 'üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥' }],
          [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥' }]
        ],
        resize_keyboard: true
      }
    });
  });

  bot.command('inquiry', async (ctx) => {
    logger.info(`User ${ctx.from.id} started inquiry`);
    ctx.session.currentScene = 'inquiry';
    ctx.session.inquiryData = {
      name: '',
      contact: '',
      projectType: '',
      projectDescription: '',
      budget: ''
    };
    await ctx.reply('–î–∞–≤–∞–π—Ç–µ –æ—Ñ–æ—Ä–º–∏–º –≤–∞—à—É –∑–∞—è–≤–∫—É. –ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?');
  });
};
