import { Telegraf } from 'telegraf';
import { BotContext } from '../middleware/session.middleware.js';
import { logger } from '../../utils/logger.js';

export const registerWelcomeScene = (bot: Telegraf<BotContext>) => {
  bot.hears('üîç –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', async (ctx) => {
    logger.info(`User ${ctx.from.id} chose to make an inquiry`);
    ctx.session.currentScene = 'inquiry';
    ctx.session.inquiryData = {
      name: '',
      contact: '',
      projectType: '',
      projectDescription: '',
      budget: '',
      features: '',
      timeline: ''
    };
    await ctx.reply('–î–∞–≤–∞–π—Ç–µ –æ—Ñ–æ—Ä–º–∏–º –≤–∞—à—É –∑–∞—è–≤–∫—É. –ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?');
  });

  bot.hears('‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã', async (ctx) => {
    logger.info(`User ${ctx.from.id} chose FAQ`);
    ctx.session.currentScene = 'faq';
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å:', {
      reply_markup: {
        keyboard: [
          [{ text: 'üíª –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞' }, { text: 'üì± –ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞' }],
          [{ text: 'ü§ñ AI-—Ä–µ—à–µ–Ω–∏—è' }, { text: 'üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥' }],
          [{ text: '‚¨ÖÔ∏è –ù–∞–∑–∞–¥' }]
        ],
        resize_keyboard: true
      }
    });
  });

  bot.hears('üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º', async (ctx) => {
    logger.info(`User ${ctx.from.id} chose to contact a manager`);
    await ctx.reply('–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç (—Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –ø–æ—á—Ç—É):');
    ctx.session.currentScene = 'contact';
  });
};
